name: Pi Gateway CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-format:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install shellcheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run shellcheck
        run: make lint

      - name: Check formatting
        run: make format-check

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Ensure BATS is executable
        run: chmod +x tests/bats-core/bin/bats

      - name: Run dry-run tests
        run: make test-dry-run

      - name: Run unit tests
        run: make test-unit

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: |
            /tmp/pi-gateway-*.log
            tests/results/

  docker-tests:
    name: Docker Integration Tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        mode: [simple, systemd]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker test image
        run: make docker-build

      - name: Run Docker tests (Simple Mode)
        if: matrix.mode == 'simple'
        run: make test-docker

      - name: Run Docker tests (Systemd Mode)
        if: matrix.mode == 'systemd'
        run: make test-docker-systemd

      - name: Clean up Docker environment
        if: always()
        run: make docker-cleanup

  security-scan:
    name: Security Scanning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'table'

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    needs: [lint-and-format, unit-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck

      - name: Run complete test suite
        run: make test-all-integration

  build-summary:
    name: Build Summary
    runs-on: ubuntu-latest
    needs: [lint-and-format, unit-tests, docker-tests, security-scan]
    if: always()
    steps:
      - name: Check build status
        run: |
          echo "## Pi Gateway CI Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Code Quality**: ${{ needs.lint-and-format.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Unit Tests**: ${{ needs.unit-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Docker Tests**: ${{ needs.docker-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Security Scan**: ${{ needs.security-scan.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Overall Status**: ${{ job.status }}" >> $GITHUB_STEP_SUMMARY