# Pi Gateway DuckDNS Configuration Template
# Simplified DuckDNS setup for Pi Gateway homelab
#
# DuckDNS is a free dynamic DNS service that's perfect for homelab use
# Sign up at: https://www.duckdns.org

#=============================================================================
# DuckDNS Account Setup
#=============================================================================

# 1. Go to https://www.duckdns.org
# 2. Sign in with your preferred account (Google, GitHub, etc.)
# 3. Create a new domain (e.g., myhome.duckdns.org)
# 4. Copy your token from the dashboard
# 5. Use the configuration below

#=============================================================================
# DDClient Configuration for DuckDNS
#=============================================================================

# Basic DuckDNS configuration
daemon=300
syslog=yes
mail=root
mail-failure=root
pid=/var/run/ddclient.pid
ssl=yes

# IP detection
use=web, web=checkip.dyndns.com, web-skip='IP Address'

# DuckDNS settings
protocol=duckdns
server=www.duckdns.org
login=nouser
password=YOUR_DUCKDNS_TOKEN_HERE
YOUR_DOMAIN.duckdns.org

#=============================================================================
# Alternative IP Detection Methods
#=============================================================================

# If the default IP detection doesn't work, try these alternatives:

# Method 1: ipinfo.io
# use=web, web=ipinfo.io/ip, web-skip=''

# Method 2: icanhazip.com
# use=web, web=icanhazip.com, web-skip=''

# Method 3: ifconfig.me
# use=web, web=ifconfig.me/ip, web-skip=''

# Method 4: Network interface (if you have a static local setup)
# use=if, if=eth0

#=============================================================================
# Example Configuration
#=============================================================================

# Replace with your actual values:
# daemon=300
# syslog=yes
# mail=root
# mail-failure=root
# pid=/var/run/ddclient.pid
# ssl=yes
# use=web, web=checkip.dyndns.com, web-skip='IP Address'
#
# protocol=duckdns
# server=www.duckdns.org
# login=nouser
# password=12345678-1234-1234-1234-123456789012
# myhomelab.duckdns.org

#=============================================================================
# DuckDNS Shell Script Alternative
#=============================================================================

# You can also use a simple shell script instead of ddclient:

#!/bin/bash
# DuckDNS update script for Pi Gateway

DOMAIN="YOUR_DOMAIN"
TOKEN="YOUR_TOKEN"
LOG_FILE="/var/log/duckdns.log"

# Get current IP
CURRENT_IP=$(curl -s https://ipinfo.io/ip)

# Update DuckDNS
RESPONSE=$(curl -s "https://www.duckdns.org/update?domains=${DOMAIN}&token=${TOKEN}&ip=${CURRENT_IP}")

# Log result
echo "$(date): IP $CURRENT_IP - Response: $RESPONSE" >> "$LOG_FILE"

if [[ "$RESPONSE" == "OK" ]]; then
    echo "DuckDNS update successful: $CURRENT_IP"
    exit 0
else
    echo "DuckDNS update failed: $RESPONSE"
    exit 1
fi

# Save as /usr/local/bin/duckdns-update
# Make executable: chmod +x /usr/local/bin/duckdns-update
# Add to cron: */5 * * * * /usr/local/bin/duckdns-update

#=============================================================================
# Systemd Service for DuckDNS Script
#=============================================================================

# Create /etc/systemd/system/duckdns.service:

[Unit]
Description=Pi Gateway DuckDNS Update
Wants=network-online.target
After=network-online.target

[Service]
Type=oneshot
ExecStart=/usr/local/bin/duckdns-update
User=pi

# Create /etc/systemd/system/duckdns.timer:

[Unit]
Description=Run DuckDNS update every 5 minutes
Requires=duckdns.service

[Timer]
OnCalendar=*:0/5
Persistent=true

[Install]
WantedBy=timers.target

# Enable with:
# sudo systemctl enable duckdns.timer
# sudo systemctl start duckdns.timer

#=============================================================================
# Cron Job Configuration
#=============================================================================

# Add to /etc/cron.d/duckdns:

# DuckDNS update every 5 minutes
*/5 * * * * pi /usr/local/bin/duckdns-update >/dev/null 2>&1

# DuckDNS update on reboot
@reboot pi sleep 60 && /usr/local/bin/duckdns-update >/dev/null 2>&1

#=============================================================================
# Testing DuckDNS Configuration
#=============================================================================

# Test manual update:
curl "https://www.duckdns.org/update?domains=YOUR_DOMAIN&token=YOUR_TOKEN&ip="

# Check current IP:
curl -s https://ipinfo.io/ip

# Verify DNS resolution:
nslookup YOUR_DOMAIN.duckdns.org

# Test with different DNS servers:
nslookup YOUR_DOMAIN.duckdns.org 8.8.8.8
nslookup YOUR_DOMAIN.duckdns.org 1.1.1.1

#=============================================================================
# Router Configuration for DuckDNS
#=============================================================================

# Once DuckDNS is working, configure your router for port forwarding:

# Pi Gateway Services and Ports:
# SSH:        External Port 2222 → Pi IP:2222
# VPN:        External Port 51820 → Pi IP:51820
# VNC:        External Port 5900 → Pi IP:5900 (optional, use VPN instead)
# Web:        External Port 80/443 → Pi IP:80/443 (if running web services)

# Example router configuration:
# Service: SSH
# External Port: 2222
# Internal IP: 192.168.1.100 (your Pi IP)
# Internal Port: 2222
# Protocol: TCP

#=============================================================================
# Security Considerations
#=============================================================================

# 1. Token Security:
#    - Keep your DuckDNS token secret
#    - Don't commit tokens to version control
#    - Regenerate tokens if compromised

# 2. Port Forwarding:
#    - Only forward necessary ports
#    - Use non-standard ports where possible
#    - Consider VPN instead of direct port forwarding

# 3. Monitoring:
#    - Monitor update logs regularly
#    - Set up alerts for update failures
#    - Check for unauthorized access attempts

#=============================================================================
# Troubleshooting DuckDNS
#=============================================================================

# Common issues and solutions:

# 1. Updates not working:
#    - Verify token is correct
#    - Check domain name spelling
#    - Test manual update via browser
#    - Check internet connectivity

# 2. DNS not resolving:
#    - Wait for DNS propagation (up to 24 hours)
#    - Try different DNS servers
#    - Clear local DNS cache
#    - Check DuckDNS domain status

# 3. Frequent failures:
#    - Check update frequency (don't update too often)
#    - Verify IP detection method
#    - Check for network connectivity issues
#    - Review DuckDNS service status

# 4. IP not updating:
#    - Verify IP detection is working: curl -s https://ipinfo.io/ip
#    - Check if your IP actually changed
#    - Test manual update with specific IP
#    - Review update logs

#=============================================================================
# Integration with Pi Gateway Services
#=============================================================================

# After DuckDNS is configured, you can access Pi Gateway services externally:

# SSH access:
ssh -p 2222 pi@YOUR_DOMAIN.duckdns.org

# VPN connection:
# Use YOUR_DOMAIN.duckdns.org:51820 as the endpoint in WireGuard client

# VNC connection (if enabled externally):
# YOUR_DOMAIN.duckdns.org:5900

# Web services:
# http://YOUR_DOMAIN.duckdns.org or https://YOUR_DOMAIN.duckdns.org

#=============================================================================
# Advanced DuckDNS Features
#=============================================================================

# Subdomain support:
# DuckDNS supports up to 5 free subdomains per account
# You can have: home.duckdns.org, lab.duckdns.org, server.duckdns.org, etc.

# IPv6 support:
# DuckDNS supports IPv6 addresses
# Update with: https://www.duckdns.org/update?domains=DOMAIN&token=TOKEN&ipv6=IPV6_ADDRESS

# Wildcard support:
# *.YOUR_DOMAIN.duckdns.org will resolve to your IP
# Useful for multiple services on different subdomains

#=============================================================================
# Monitoring and Maintenance
#=============================================================================

# Monitor DuckDNS updates:
tail -f /var/log/duckdns.log

# Check service status (if using systemd):
systemctl status duckdns.timer

# Verify current registration:
nslookup YOUR_DOMAIN.duckdns.org

# Test external connectivity:
# From outside your network, try connecting to services

# Regular maintenance:
# - Review logs monthly
# - Test external access quarterly
# - Update tokens annually
# - Verify router configuration after changes