# Pi Gateway SSH Client Configuration Template
# Optimized SSH client settings for connecting to Pi Gateway and other hosts
#
# Usage: Copy relevant sections to ~/.ssh/config
# Generated by Pi Gateway SSH Setup Script

#=============================================================================
# Global SSH Client Settings
#=============================================================================

# Apply these settings to all hosts unless overridden
Host *
    # Protocol and Security
    Protocol 2                              # Use SSH protocol version 2 only
    ForwardAgent no                         # Don't forward SSH agent (security)
    ForwardX11 no                          # Don't forward X11 by default
    HashKnownHosts yes                     # Hash known hosts for privacy
    CheckHostIP yes                        # Verify host IP addresses
    AddressFamily any                      # Use IPv4 or IPv6

    # Connection Settings
    ConnectTimeout 30                       # Connection timeout in seconds
    ServerAliveInterval 60                  # Send keep-alive every minute
    ServerAliveCountMax 3                   # Disconnect after 3 missed keep-alives

    # Authentication Preferences
    PreferredAuthentications publickey,keyboard-interactive,password
    PubkeyAuthentication yes                # Enable public key authentication
    PasswordAuthentication yes              # Allow password as fallback
    ChallengeResponseAuthentication yes     # Allow challenge-response

    # Key Algorithms (strongest first)
    PubkeyAcceptedKeyTypes ssh-ed25519,rsa-sha2-512,rsa-sha2-256,ssh-rsa

    # Host Key Verification
    HostKeyAlgorithms ssh-ed25519,ecdsa-sha2-nistp256,ecdsa-sha2-nistp384,ecdsa-sha2-nistp521,rsa-sha2-512,rsa-sha2-256,ssh-rsa

    # Connection Optimization
    Compression yes                         # Enable compression for slow connections
    ControlMaster auto                      # Reuse connections when possible
    ControlPath ~/.ssh/sockets/%r@%h:%p     # Control socket path
    ControlPersist 10m                      # Keep connections alive for 10 minutes

#=============================================================================
# Pi Gateway Host Configuration
#=============================================================================

# Configuration for connecting to your Pi Gateway
Host pi-gateway
    HostName 192.168.1.100                 # Replace with your Pi's IP address
    Port 2222                               # Custom SSH port (matches server config)
    User pi                                 # Username
    IdentityFile ~/.ssh/id_ed25519          # Private key file
    StrictHostKeyChecking ask               # Prompt for unknown host keys
    UserKnownHostsFile ~/.ssh/known_hosts   # Known hosts file

    # Pi Gateway specific optimizations
    ServerAliveInterval 30                  # More frequent keep-alive for homelab
    ServerAliveCountMax 6                   # Allow more missed keep-alives
    TCPKeepAlive no                         # Use SSH keep-alive instead

    # Security settings
    ForwardAgent no                         # Don't forward agent to Pi
    ForwardX11 no                          # No X11 forwarding by default

    # Connection optimization for local network
    Compression no                          # Disable compression on LAN
    ControlPersist 30m                      # Keep connection longer for frequent use

#=============================================================================
# Pi Gateway External Access
#=============================================================================

# Configuration for connecting from outside your network (via Dynamic DNS)
Host pi-gateway-remote
    HostName your-hostname.duckdns.org      # Replace with your DDNS hostname
    Port 2222                               # External port (configure port forwarding)
    User pi
    IdentityFile ~/.ssh/id_ed25519
    StrictHostKeyChecking ask

    # External connection optimizations
    ServerAliveInterval 60                  # Standard keep-alive for internet
    ServerAliveCountMax 3                   # Shorter timeout for unreliable connections
    ConnectTimeout 30                       # Reasonable timeout for internet
    Compression yes                         # Enable compression for internet connections

    # Security for external connections
    ForwardAgent no                         # Never forward agent over internet
    ForwardX11 no                          # No X11 over internet
    PasswordAuthentication no               # Key-only authentication for external

#=============================================================================
# Common Homelab Hosts
#=============================================================================

# Template for other Raspberry Pi devices in your homelab
Host pi-*
    User pi                                 # Assume 'pi' user for all Pi devices
    Port 22                                 # Default port (adjust per device)
    PubkeyAuthentication yes                # Prefer key authentication
    PasswordAuthentication no               # Disable passwords for Pi devices
    StrictHostKeyChecking ask               # Prompt for new devices

    # Homelab optimizations
    ServerAliveInterval 60
    ServerAliveCountMax 3
    Compression no                          # No compression on LAN
    ForwardAgent no                         # Security best practice

# Template for other homelab servers
Host homelab-*
    Port 22
    PubkeyAuthentication yes
    PasswordAuthentication yes              # Allow passwords for mixed environments
    StrictHostKeyChecking ask

    # Standard settings for homelab servers
    ServerAliveInterval 60
    ServerAliveCountMax 3
    Compression no

#=============================================================================
# Development and Debugging
#=============================================================================

# Configuration for SSH debugging and development
Host debug-*
    LogLevel DEBUG3                         # Maximum verbosity for debugging
    StrictHostKeyChecking no                # Don't check host keys (dev only!)
    UserKnownHostsFile /dev/null            # Don't save host keys (dev only!)
    PasswordAuthentication yes              # Allow passwords for testing
    PubkeyAuthentication yes                # Also try keys

#=============================================================================
# Advanced Features
#=============================================================================

# Jump host configuration (if you have a bastion/jump server)
Host jump-server
    HostName bastion.example.com
    Port 22
    User jump-user
    IdentityFile ~/.ssh/id_rsa_jump
    ForwardAgent yes                        # Forward agent for subsequent connections

# Using jump server to reach internal hosts
Host internal-*
    ProxyJump jump-server                   # Connect through jump server
    StrictHostKeyChecking ask
    ForwardAgent no                         # Don't forward agent to internal hosts

#=============================================================================
# Usage Examples and Tips
#=============================================================================

# Connection Examples:
# ssh pi-gateway                           # Connect to Pi Gateway locally
# ssh pi-gateway-remote                    # Connect to Pi Gateway remotely
# ssh pi-node-2                           # Connect to another Pi in homelab
# ssh -L 8080:localhost:80 pi-gateway     # Local port forwarding
# ssh -D 1080 pi-gateway                  # SOCKS proxy (if enabled)

# Key Management:
# ssh-keygen -t ed25519 -C "your-email@example.com"  # Generate new key
# ssh-copy-id -p 2222 pi@pi-gateway                   # Copy key to Pi Gateway
# ssh-add ~/.ssh/id_ed25519                           # Add key to agent

# Connection Testing:
# ssh -T pi-gateway                        # Test connection without PTY
# ssh -v pi-gateway                        # Verbose output for debugging
# ssh -o ConnectTimeout=5 pi-gateway       # Quick connection test

#=============================================================================
# Security Notes
#=============================================================================

# 1. Keep private keys secure (never share or commit to version control)
# 2. Use different keys for different environments (work, personal, etc.)
# 3. Regularly rotate SSH keys (at least annually)
# 4. Use SSH agent for key management (ssh-add)
# 5. Consider using hardware security keys for critical systems
# 6. Monitor SSH logs for suspicious activity
# 7. Use fail2ban or similar tools to prevent brute force attacks
# 8. Keep SSH client and server software updated

#=============================================================================
# Troubleshooting
#=============================================================================

# Common Issues:
# - "Connection refused": Check if SSH service is running and port is correct
# - "Permission denied": Verify key permissions (600 for private, 644 for public)
# - "Host key verification failed": Host key has changed, verify and update
# - "Too many authentication failures": Check ssh-agent key count (max 6)
# - Slow connections: Try disabling compression or DNS resolution